{"ast":null,"code":"var _jsxFileName = \"/Users/anushka.maheshwari/Desktop/react-task2/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Context from \"../context\";\nimport useForecast from '../hooks/useForecast';\nimport { useNavigate } from 'react-router-dom';\nimport Weather from './Weather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const [city, setCity] = useState('');\n  const {\n    forecast,\n    submitRequest\n  } = useForecast();\n  useEffect(() => {\n    submitRequest(city);\n  }, [city]);\n  let navigate = useNavigate();\n\n  function clickHandler() {\n    console.log(\"heloo\");\n    console.log(\"hello\", {\n      forecast\n    });\n\n    /*#__PURE__*/\n    _jsxDEV(Context.Provider, {\n      value: {\n        forecast\n      },\n      children: /*#__PURE__*/_jsxDEV(Weather, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 8\n    }, this);\n  }\n\n  function clickHandler2() {\n    localStorage.clear();\n    navigate('/');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" grid container \",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickHandler2,\n        className: \"fluid ui button blue\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid container \",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weather Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid container \",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Get All Your Essential Weather Data For A Specific Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"city name\",\n              onChange: e => {\n                setCity(e.target.value);\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clickHandler,\n              className: \"fluid ui button blue\",\n              children: \"Get Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid container \",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Next 7 Days Temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), console.log({\n      city\n    }), console.log({\n      forecast\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"N+tIoJ8ZlZpSIoqepfFXoK3ixpY=\", false, function () {\n  return [useForecast, useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/anushka.maheshwari/Desktop/react-task2/src/components/Dashboard.js"],"names":["React","useState","useEffect","Context","useForecast","useNavigate","Weather","Dashboard","city","setCity","forecast","submitRequest","navigate","clickHandler","console","log","clickHandler2","localStorage","clear","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AACA,SAASC,SAAT,GACA;AAAA;;AACI,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeR,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM;AAACS,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA6BP,WAAW,EAA9C;AACAF,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,aAAa,CAACH,IAAD,CAAb;AACH,GAFQ,EAEP,CAACA,IAAD,CAFO,CAAT;AAGA,MAAII,QAAQ,GAACP,WAAW,EAAxB;;AACA,WAASQ,YAAT,GACA;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB;AAACL,MAAAA;AAAD,KAApB;;AACD;AAAA,YAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE;AAACA,QAAAA;AAAD,OAAzB;AAAA,6BACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAIF;;AACD,WAASM,aAAT,GACA;AACIC,IAAAA,YAAY,CAACC,KAAb;AACAN,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACH;;AACD,sBACA;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACG;AAAQ,QAAA,OAAO,EAAEI,aAAjB;AAAiC,QAAA,SAAS,EAAC,sBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,WAAW,EAAC,WAA/B;AAA2C,cAAA,QAAQ,EAAGG,CAAD,IAAK;AAACV,gBAAAA,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AAAwB,eAAnF;AAAqF,cAAA,QAAQ;AAA7F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACA;AAAQ,cAAA,OAAO,EAAER,YAAjB;AAAgC,cAAA,SAAS,EAAC,sBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYA;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,EA0BCC,OAAO,CAACC,GAAR,CAAY;AAACP,MAAAA;AAAD,KAAZ,CA1BD,EA2BCM,OAAO,CAACC,GAAR,CAAY;AAACL,MAAAA;AAAD,KAAZ,CA3BD;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAmCH;;GAzDQH,S;UAG8BH,W,EAItBC,W;;;KAPRE,S;AA0DT,eAAeA,SAAf","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport Context from \"../context\";\nimport useForecast from '../hooks/useForecast';\nimport {useNavigate} from 'react-router-dom';\nimport Weather from './Weather';\nfunction Dashboard()\n{\n    const [city,setCity]=useState('');\n    const {forecast, submitRequest } = useForecast();\n    useEffect(()=>{\n        submitRequest(city)\n    },[city])\n    let navigate=useNavigate();\n    function clickHandler()\n    {\n        console.log(\"heloo\")\n        console.log(\"hello\",{forecast});\n       <Context.Provider value={{forecast}}> \n        <Weather/>\n       </Context.Provider> \n       \n    }\n    function clickHandler2()\n    {\n        localStorage.clear()\n        navigate('/')\n    }\n    return(\n    <div >\n      <div className=\" grid container \">\n         <button onClick={clickHandler2}  className=\"fluid ui button blue\">Logout</button>\n      </div>\n      <div className=\"grid container \">\n          <h2>Weather Forecast</h2>\n      </div>\n      <div className=\"grid container \">\n          <h3>Get All Your Essential Weather Data For A Specific Location</h3>\n      </div>\n      <div className=\"container\">\n        <form>\n        <div className=\"ui divider\"></div>\n        <div className=\"ui form\">\n          <div className=\"field\">\n            <input type=\"text\" placeholder='city name' onChange={(e)=>{setCity(e.target.value)}} required/>\n          </div>\n          <div className=\"field\">\n          <button onClick={clickHandler}  className=\"fluid ui button blue\">Get Details</button>\n          </div>\n        </div>\n      </form>\n      <div className=\"grid container \">\n          <h3>Next 7 Days Temperature</h3>\n      </div>\n    </div>\n    {console.log({city})}\n    {console.log({forecast})}\n    {/* <Context.Provider value={{forecast}}> \n        <Weather/>\n    </Context.Provider>  */}\n   \n    </div>\n    )\n}\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}