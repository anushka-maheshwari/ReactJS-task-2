{"ast":null,"code":"var _jsxFileName = \"/Users/anushka.maheshwari/Desktop/react-task2/src/Components/LoginForm/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm() {\n  _s();\n\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  };\n  const [formValues, setFormValues] = useState(initialValues);\n  let navigate = useNavigate();\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const errors = validate(formValues);\n    console.log(errors);\n\n    if (Object.keys(errors).length === 0) {\n      localStorage.setItem('user', JSON.stringify(formValues));\n      navigate('/dashboard');\n    }\n  };\n\n  const validate = values => {\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    if (!values.username) {\n      alert(\"Enter Username\");\n      errors.username = \"Username is required!\";\n    }\n\n    if (!values.email) {\n      alert(\" Enter Your Email \");\n      errors.email = \"Email is required!\";\n    } else if (!regex.test(values.email)) {\n      alert(\"Enter Valid Email\");\n      errors.email = \"This is not a valid email format!\";\n    }\n\n    if (!values.password) {\n      alert(\"Enter password\");\n      errors.password = \"Password is required\";\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid container \",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              placeholder: \"Username\",\n              value: formValues.username,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Email\",\n              value: formValues.email,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Password\",\n              value: formValues.password,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" grid container \",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          className: \"fluid ui button blue\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"M1kbTgvAmLM1nITgDHjPq4rAvSs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/anushka.maheshwari/Desktop/react-task2/src/Components/LoginForm/LoginForm.js"],"names":["useState","useNavigate","LoginForm","initialValues","username","email","password","formValues","setFormValues","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","errors","validate","console","log","Object","keys","length","localStorage","setItem","JSON","stringify","values","regex","alert","test"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport {useNavigate} from 'react-router-dom';\nfunction LoginForm() {\n  const initialValues = { username: \"\", email: \"\", password: \"\" };\n  const [formValues, setFormValues] = useState(initialValues);\n  let navigate=useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues({ ...formValues, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const errors=validate(formValues);\n    console.log(errors);\n    if (Object.keys(errors).length === 0) {\n    localStorage.setItem('user',JSON.stringify(formValues))\n    navigate('/dashboard');\n    }\n  };\n  const validate = (values) => {\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n    if (!values.username) {\n      alert(\"Enter Username\");\n      errors.username = \"Username is required!\";\n    }\n    if (!values.email) {\n      alert(\" Enter Your Email \")\n      errors.email = \"Email is required!\";\n    }else if (!regex.test(values.email)) {\n      alert(\"Enter Valid Email\");\n      errors.email = \"This is not a valid email format!\";\n    }\n    if (!values.password) {\n      alert(\"Enter password\");\n      errors.password = \"Password is required\";\n    } \n    return errors;\n  };\n\n  return (\n    <div>\n        <div className=\"grid container \">\n        <h1>Login Form</h1>\n        </div>\n        <div className=\"container\">\n        <form>\n        <div className=\"ui divider\"></div>\n        <div className=\"ui form\">\n          <div className=\"field\">\n            <label>Username</label>\n            <input type=\"text\" name=\"username\"  placeholder=\"Username\" value={formValues.username} onChange={handleChange}/>\n          </div>\n          <div className=\"field\">\n            <label>Email</label>\n            <input type=\"email\" name=\"email\" placeholder=\"Email\" value={formValues.email} onChange={handleChange}/>\n          </div>\n          <div className=\"field\">\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" placeholder=\"Password\" value={formValues.password}onChange={handleChange}/>\n          </div>\n        </div>\n        </form>\n        <div className=\" grid container \">\n        <button  onClick={handleSubmit} className=\"fluid ui button blue\">Login</button>\n      </div>\n        \n    </div>\n    </div>\n  );\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}